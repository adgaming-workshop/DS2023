#!/usr/bin/env python
# coding: utf-8

# In[2]:





# In[14]:


import streamlit as st
import pandas as pd
import numpy as np
import pydeck as pdk


# In[19]:


import streamlit as st
from PIL import Image

codepiece1 = ''''''
codepiece2 = ''''''
codepiece3 = ''''''
codepiece4 = ''''''
codepiece5 = ''''''
codepiece6 = ''''''
codepiece7 = ''''''
codepiece8 = ''''''
wholecode = ''''''
st.markdown("# FAST FOOD STATS Project")

st.markdown("## Предисловие")
st.markdown('''В данном проекте проводится:
- Анализ количества точек сетей быстрого питания (Вкусно и точка, KFC, Burger King, Теремок) в разбивке по субъектам РФ;
- Вычисление доли каждой из 4 выбранных сетей относительно количества остальных в регионе;
- Определение наиболее распространенной сети в регионе, построение карты.''')
st.markdown("P.S. Код, прикрепленный к данной презентации, рабочий.")

st.markdown("## Часть 1. Получение данных")
st.markdown("Для проведения исследования понадобились данные о точках быстрого питания, а также список субъектов РФ. Пройдемся по порядку.")
st.markdown("Яндекс.Карты")
st.markdown('''Из Яндекс.Карт парсятся данные о работающих точках по всей РФ. Парсинг происходит из поисковой выдачи Карт с помощью API Поиска по организациям от Yandex (для повторного парсинга нужен собственный apikey, получить можно на сайте Кабинета разработчика Яндекс).")
Стоит отметить, что API позволяет спарсить не более 1000 строк за один запрос, но, благо, количество открытых точек даже по всем 4 выбранным сетям вместе удовлетворяет это условие для каждого региона.''')
st.code(codepiece1, language='python')
st.markdown("Субъекты РФ")
st.markdown("2. Информация о субъектах парсится с сайта %ccылка_на_сайт% c помощью Selenium. Нужно для итерирования по всем субъектам в предыдущем пункте.")
st.code(codepiece2, language='python')
st.markdown("Полученные данные укладываются в датафрейм Pandas, но об этом отдельно.")
    
st.markdown("## Часть 2. Работа с датафреймом")
    
st.markdown('''Уложенные в датафрейм данные нужно очистить. Проведено две стадии фильтрации:
- **Фильтр от точек вне региона**. Т.к. API не смотрит на принадлежность локации к региону, а проверяет лишь попадание в прямоугольник, внутрь которого вписываются все точки региона.
Таким образом, в датасет попадают и точки в "углах" прямоугольника, не принадлежащие региону. Для этого:''')
st.code(codepiece3, language='python')
st.markdown('''- **Дедубликация** (например, "Вкусно и точка" и "Вкусно и точка.Авто", находящиеся в одном здании, парсятся как две самостоятельные точки). Для этого:''')
st.code(codepiece4, language='python')

st.markdown("## Часть 3. Количество точек по регионам / количество точек по сетям")
st.markdown("После получения данных переходим к их визуализации. Для начала, построим barplot (Seaborn) c топ-30 (?) регионов с максимальным количеством точек по всем 4 сетям:")
st.code(codepiece5, language='python')
st.markdown("(визуал 1 here)")
st.markdown("Здесь результаты вполне предсказуемы. Построим barplot с количеством точек в разбивке по франшизам:")
st.code(codepiece6, language='python')
st.markdown("(визуал 2 here)")
st.markdown('''Весьма неочевидно, но получилось, что на 2023 г. "Теремок" лидирует в РФ по количеству точек.''')

st.markdown("## Часть 4. Доля каждой сети по регионам, определение наиболее популярной сети по регионам")
st.markdown('''Далее, покажем долю точек каждой из сетей относительно всех остальных в регионах. Покажем эти доли на картах с помощью Folium и Geopandas.
Построение карты РФ была взята из существующего проекта, с адаптацией под данный проект:''')
st.code(codepiece7, language='python')

st.markdown("Получились вот такие карты по долям каждой из сетей:")
st.markdown("(4 визуала here)")

st.markdown("И наконец, покажем самую популярную сеть в каждом регионе:")
st.code(codepiece8, language='python')
st.markdown("(визуал 7 here)")

st.markdown("На этом все!")
st.markdown("**Исходный код:**")
st.code(wholecode, language='python')
with open("Final.html", "rb") as file:
    btn = st.download_button(
            label="Скачать .ipynb",
            data=file,
            file_name="Final.html"
          )


# In[10]:




